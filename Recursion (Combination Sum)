class Solution {
    public:
    void helper(vector<vector<int>>& ans,vector<int>& ds,vector<int>&candidates,int target,int index){
        if(index==candidates.size()){
            if(target==0){
                ans.push_back(ds);
            }
            return;
        }
        //pick
        if(candidates[index]<=target){
            ds.push_back(candidates[index]);
            helper(ans,ds,candidates,target-candidates[index],index);
            ds.pop_back();
        }
        helper(ans,ds,candidates,target,index+1);
    }
    
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int>ds;
        helper(ans,ds,candidates,target,0);
        return ans;
        
    }
};
