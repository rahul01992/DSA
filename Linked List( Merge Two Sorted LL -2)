 SinglyLinkedListNode* solve(SinglyLinkedListNode* first,SinglyLinkedListNode* second){
     if(first->next==NULL){
         first->next=second;
         return first;
     }
     SinglyLinkedListNode* curr1=first;
     SinglyLinkedListNode* next1=curr1->next;
     SinglyLinkedListNode* curr2=second;
     SinglyLinkedListNode* next2=curr2->next;
     while(next1!=NULL && next2!=NULL){
         if((curr2->data>=curr1->data) && (curr2->data<=next1->data)){
             //insert Node
             curr1->next=curr2;
             next2=curr2->next;
             curr2->next=next1;
             //Update pointer
             curr1=curr2;
             curr2=next2;
         }
         else{
             curr1=next1;
             next1=next1->next;
             if(next1==NULL){
                 curr1->next=curr2;
                 return first;
             }
         }
     }
     return first;
 }
SinglyLinkedListNode* mergeLists(SinglyLinkedListNode* head1, SinglyLinkedListNode* head2) {
    if(head1==NULL){
        return head2;
    }
    if(head2==NULL){
        return head1;
    }
    if(head1==NULL && head2==NULL){
        return NULL;
    }
    if(head1->data<=head2->data){
        return solve(head1,head2);
    }
    else{
        return solve(head2,head1);
    }
    
}
