int editDistance_DP(string s1,string s2,int **output){
	int m=s1.size();
	int n=s2.size();
	if(s1.size()==0){
		return s2.size();
	}
	if(s2.size()==0){
		return s1.size();
	}
  if (output[m][n] != -1) {
      return output[m][n];
  }
  int ans;
    if(s1[0]==s2[0]){
        return editDistance_DP(s1.substr(1), s2.substr(1),output);
    }
	else{
      int a=editDistance_DP(s1, s2.substr(1), output)+1;
      int b=editDistance_DP(s1.substr(1), s2, output)+1;
      int c=editDistance_DP(s1.substr(1), s2.substr(1), output)+1;
	  ans=min(a,min(b,c));
    }
	output[m][n]=ans;
	return ans;
}
int editDistance(string s1, string s2) {
  int m = s1.size();
  int n = s2.size();
  int **output = new int *[m + 1];
  for (int i = 0; i <= m; i++) {
    output[i] = new int[n + 1];
    for (int j = 0; j <= n; j++) {
      output[i][j] = -1;
    }
  }
  return editDistance_DP(s1, s2, output);
}
