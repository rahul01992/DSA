int countStepsToOne_Helper(int *arr,int n){
	if(n<=1){
		return 0;
	}
	if(arr[n]!=-1){
		return arr[n];
	}
	int x=countStepsToOne_Helper(arr,  n-1);
	int y=INT_MAX;
	int z=INT_MAX;
	if(n%2==0){
		y=countStepsToOne_Helper(arr,  n/2);
	}
    if (n % 3 == 0) {
        z=countStepsToOne_Helper(arr, n / 3);
     }
        int output =1+ min(x, min(y, z));
        arr[n] = output;
        return output;
}
int countStepsToOne(int n)
{
	int *arr=new int [n+1];
	for(int i=0;i<=n;i++){
		arr[i]=-1;
	}
	return countStepsToOne_Helper(arr,n);
	}
	
