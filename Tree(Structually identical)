bool areIdentical(TreeNode<int> *root1, TreeNode<int> * root2) {
    if(root1==NULL && root2==NULL){
        return true;
    }
    if(root1==NULL && root2!=NULL){
        return false;
    }
    if(root1!=NULL && root2==NULL){
        return false;
    }
    if ((root1->data != root2->data) ||
        (root1->children.size() != root2->children.size())) {
      return false;
    }
  int i=0;
  bool result=true;
  while(i<root1->children.size() && i<root2->children.size()){
    bool ans = areIdentical(root1->children[i], root2->children[i]);
    //bool right = areIdentical(root1->children[i], root2->children[i]);
    bool currNode = root1->children[i]->data == root2->children[i] ->data;
   i++;
    if (ans && currNode) {
      
      result=true;
      }
      else{
    
          result= false;
          break;
      }
     
  }
   return result;
