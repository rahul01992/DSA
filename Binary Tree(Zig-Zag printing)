#include<stack>
void zigZagOrder(BinaryTreeNode<int> *root) {
	if(root==NULL){
		return ;
	}
 stack<BinaryTreeNode<int>*>s1;
 stack<BinaryTreeNode<int>*>s2;
 s1.push(root);
 while(!s1.empty()){//for traversal on whole data
	 while(!s1.empty()){
		 BinaryTreeNode<int>* top=s1.top();
		 s1.pop();
		 cout<<top->data<<" ";
		 if(top->left){
			 s2.push(top->left);
		 }
		 if(top->right){
			 s2.push(top->right);
		 }
		 
	 } cout<<endl;
	 
	
	while(!s2.empty()){
		BinaryTreeNode<int>*top2=s2.top();
		s2.pop();
		cout<<top2->data<<" ";
		if(top2->right){
			s1.push(top2->right);
		}
		if(top2->left){
			s1.push(top2->left);
		}	
	}
	cout<<endl;
 }

}
	
