class Solution {
public:
void findSum2(vector<int>& candidates,int target,int index,vector<vector<int>>& ans,vector<int>&ds){
    if(target==0){
        ans.push_back(ds);
        return;
    }
    for(int i=index;i<candidates.size();i++){
        if(i>index && candidates[i]==candidates[i-1]){
            continue;
        }
        if(candidates[i]>target) return;
        ds.push_back(candidates[i]);
        findSum2(candidates,target-candidates[i],i+1,ans,ds);
        ds.pop_back();
        //findSum2(candidates,target,index+1,ans,ds);
    }

}
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int>ds;
        sort(candidates.begin(),candidates.end());
        findSum2(candidates,target,0,ans,ds);
        return ans;
        
    }
};
